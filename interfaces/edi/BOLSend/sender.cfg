# ============================================================================
#
# BOL Sender Configuration
#
# $Id: sender.cfg,v 1.14 2003/01/09 21:15:12 youngd Exp $
#
# Contents Copyright (c) 2002, Transport Investments Inc.
#
# Darren Young [dyoung@thefreightdepot.com]
#
# ============================================================================
#
# ChangeLog
#
# $Log: sender.cfg,v $
# Revision 1.14  2003/01/09 21:15:12  youngd
#   * Moved the type and paymentmethod.
#
# Revision 1.13  2003/01/09 20:46:47  youngd
# update
#
# Revision 1.12  2003/01/09 20:42:29  youngd
#   * Added trans_ack and trans_mode.
#
# Revision 1.11  2003/01/09 20:27:44  youngd
#   * Added more variables.
#
# Revision 1.10  2003/01/08 22:50:40  youngd
#   * Adjusted for development.
#
# Revision 1.9  2003/01/08 22:13:30  youngd
#   * Removed the rev tag
#   * Enabled FTP.
#
# Revision 1.8  2003/01/07 20:50:11  youngd
#   * Changed to the /edi bol template
#
# Revision 1.7  2003/01/06 23:04:47  youngd
#   * Added the DEBUG_SQL flag.
#   * Added more comments.
#
# ============================================================================

# Some notes on certain params, they are boolean (0 or 1)
# Remember to get this straight
# 0 == FALSE
# 1 == TRUE

# --------------------------
# BASIC GLOBAL CONFIGURATION
# --------------------------

# Controls whether or not a user is running us. If in interactive mode
# will prompt the user for input on what to do. If not, will make some
# assumptions
INTERACTIVE=1

# The time to sleep between runs, set to 0 for interactive=1
SLEEP=0

# Time to wait between transmissions
DOTICK=2

# Do you want to update the sent flag, no for testing
UPDATE_SENTFLAG=1

# Update the 204 sent date stamp in the database?
UPDATE_SENTDATE=1

# DO you want to try and resend failed docs?
RESEND_FAILED=1

# If the shipment pickup date is more than DATE_RANGE_DAYS days, it won't
# be sent this option is set.
USE_DATE_RANGE=1

# Only send out the bol if the pickup date is 2 days out.
DATE_RANGE_DAYS=2

# Skip old shipments?
SKIP_OLD=1

# These are all original documents, change docs could be added later
TYPE=ORIGINAL

# All of our shipments are booked to bill us (collect)
PAYMENTMETHOD=COLLECT

# --------------
# DEBUG SETTINGS
# --------------

# Do you want to print out the generated SQL during debugging?
DEBUG_SQL=0


# ------------
# TRANSMISSION
# ------------

# TEST or PRODUCTION?
EDIMODE=TEST

# ACK back with a 997?
EDIACK=N

# ---------
# TEMPLATES
# ---------
# This is the template that we will read in for the XML processing
# Set to the current directory for development
# Set to /edi for production
# The Makefile in here should copy it over for you
TMPL_204=/edi/204.tmpl

# -----------
# KLI FORMATS
# -----------
# These build the KLI PI header that KleinSchmidt requires
# If you don't know wnat a PI (Processing Instruction) is, read an XML tutorial.
# The format has to be BOLDATA for a Bill Of Lading
# The sender has to be us
# The receiver has to be the SCAC of the carrier
# It's case-insensitive by the way according to KleinSchmidt
KLI_FORMAT=BOLDATA
KLI_SENDER=DIGSHI
KLI_RECEIVER=DIGSHI

# -----------------
# BOL EDI SPECIFICS
# -----------------
# The document type tag, BOL==204
BOL_DOCTYPE=204


# -----------------
# FTP CONFIGURATION
# -----------------
# Most of these are params that we just pass to Net::FTP

# How long to wait to consider this a failed transmission
FTP_TIMEOUT=30

# Use FTP passive?
FTP_PASV=0

# Debug the FTP session?
FTP_DEBUG=1

# FTP test mode, if enabled, won't actually transmit but up to it
FTP_TEST=1

# ----------------------
# DATABASE CONFIGURATION
# ----------------------
DB_HOSTNAME=localhost
DB_DATABASE=digiship
DB_USERNAME=root
DB_PASSWORD=password

# Retry failed database connections? It's infinite, so use carefully
DB_RETRY=0

# ---------------
# VAN INFORMATION
# ---------------
# We're only set up for a single VAN right now.
# This could become a hash of VAN's later on.
VAN_NAME=KleinSchmidt
VAN_FTP=ftp.kleinschmidt.com
VAN_USERNAME=digshi
VAN_PASSWORD=wak2398

# ------
# QUEUES
# ------
QUEUE_ROOT=/edi

# The following are relative to QUEUE_ROOT
# outq = where the generated ones on their way to KS go
# failed = we couldn't transmit them to KS for some reason
# processed = transmitted BOL's
QUEUE_OUT=outq
QUEUE_FAIL=failed
QUEUE_PROCESSED=processed

# ----------------------
# ALERTING CONFIGURATION
# ----------------------
# This isn;t implemented yet, just here for when it is.
ALERT=1
ALERT_LEVEL=debugging
ALERT_TYPE=email
ALERT_ADDRESSES=darren@younghome.com

